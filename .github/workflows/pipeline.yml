name: Terraform e Deploy Kubernetes

on:
  pull_request:
    branches:
      - main
    types:
      - closed

permissions:
  contents: read
  id-token: write

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    outputs:
      kubeconfig: ${{ steps.terraform_output.outputs.kubeconfig }}
    steps:
      - name: Checkout do Repositório
        uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Configura o Azure CLI
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account show

      - name: Configura Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.9.6'

      - name: Inicializa Terraform
        run: terraform -chdir=Terraform/ init

      - name: Formata Terraform
        run: terraform -chdir=Terraform/ fmt -check

      - name: Valida Terraform
        run: terraform -chdir=Terraform/ validate

      - name: Planeja Terraform
        run: terraform -chdir=Terraform/ plan -out=tfplan

      - name: Aplica Terraform
        run: terraform -chdir=Terraform/ apply -auto-approve tfplan

      - name: Exporta Output do Terraform
        id: terraform_output
        run: |
          echo "kubeconfig=$(terraform -chdir=Terraform/ output -raw kube_config)" >> $GITHUB_OUTPUT
        shell: bash

  kubernetes:
    needs: terraform
    runs-on: ubuntu-latest
    env:
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    steps:
      - name: Checkout do Repositório
        uses: actions/checkout@v4

      - name: Configurar kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configurar Kubeconfig
        run: |
          echo "${{ needs.terraform.outputs.kubeconfig }}" > kubeconfig.yaml
          export KUBECONFIG=$(pwd)/kubeconfig.yaml
          kubectl config view
        shell: bash

      - name: Substituir Placeholders nos ConfigMaps
        run: |
          envsubst < K8S/db/configMap.yml > K8S/db/configMap_temp.yml
          envsubst < K8S/app/configMap.yml > K8S/app/configMap_temp.yml
        shell: bash

      - name: Aplicar ConfigMaps no Kubernetes
        run: |
          kubectl apply -f K8S/db/configMap_temp.yml
          kubectl apply -f K8S/app/configMap_temp.yml
        shell: bash

      - name: Aplicar Manifests do Kubernetes
        run: |
          kubectl apply -f K8S/db/
          kubectl apply -f K8S/app/
        shell: bash

      - name: Limpar Arquivos Temporários
        run: |
          rm K8S/db/configMap_temp.yml
          rm K8S/app/configMap_temp.yml
          rm kubeconfig.yaml
        shell: bash
